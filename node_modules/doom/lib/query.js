(function(){
  module.exports = function(engine){
    var ref$, head, toArray, internalMatches, query, matches;
    ref$ = require('./collection'), head = ref$.head, toArray = ref$.toArray;
    internalMatches = (function(el){
      return el.matchesSelector || el.oMatchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector;
    }.call(this, document.createElement('div')));
    query = function(selector, context){
      context == null && (context = document);
      return context.querySelectorAll(selector);
    };
    matches = curry$(function(selector, node){
      return internalMatches.call(node, selector);
    });
    if (engine) {
      return {
        query: engine.querySelectorAll || query,
        matches: engine.matchesSelector || matches
      };
    } else {
      return {
        query: query,
        matches: matches
      };
    }
  };
  function curry$(f, bound){
    var context,
    _curry = function(args) {
      return f.length > 1 ? function(){
        var params = args ? args.concat() : [];
        context = bound ? context || this : this;
        return params.push.apply(params, arguments) <
            f.length && arguments.length ?
          _curry.call(context, params) : f.apply(context, params);
      } : f;
    };
    return _curry();
  }
}).call(this);
